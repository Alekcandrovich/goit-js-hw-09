{"mappings":"YAWA,SAASA,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXMO,SAASC,cAAc,SAgB/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAOF,IALA,IAAMC,GAASC,MAAMC,OAAOC,SAASf,MAAMgB,MACrCC,GAAQJ,MAAMC,OAAOC,SAASE,KAAKD,MACnCE,GAAUL,MAAMC,OAAOC,SAASG,OAAOF,MAEzCG,EAAeP,EACVQ,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCtB,EAAcsB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,SAASC,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,SAASC,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjDmB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const delay = +event.target.elements.delay.value;\n  const step = +event.target.elements.step.value;\n  const amount = +event.target.elements.amount.value;\n\n  let currentDelay = delay;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    currentDelay += step;\n  }\n});"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","delay1","event","target","elements","value","step","amount","currentDelay","i","then","param","Notiflix","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a6480a0f.js.map"}